head	1.3;
access;
symbols;
locks; strict;
comment	@// @;


1.3
date	2005.04.20.19.06.02;	author gtarcea;	state dead;
branches;
next	1.2;
deltatype	text;
permissions	444;
commitid	6a84266a80775a9;
kopt	kv;
filename	@FreeBlockMapTest.cpp@;

1.2
date	2005.04.19.21.25.10;	author gtarcea;	state Exp;
branches;
next	1.1;
deltatype	text;
permissions	666;
commitid	7744265771c11ed;
kopt	kv;
filename	@FreeBlockMapTest.cpp@;

1.1
date	2005.04.19.20.54.36;	author gtarcea;	state Exp;
branches;
next	;
deltatype	text;
permissions	666;
commitid	d6842656fd77a30;
kopt	kv;
filename	@FreeBlockMapTest.cpp@;


desc
@@


1.3
log
@More unit tests, plus move over to new naming convention.
@
text
@#include "FreeBlockMapTest.hpp"
#include "FreeBlockMap.hpp"
#include "seerror.hpp"
#include <iostream>
using namespace std ;
using namespace SynerEdge ;

CPPUNIT_TEST_SUITE_REGISTRATION(FreeBlockMapTest) ;

void
FreeBlockMapTest::setUp()
{
}

void
FreeBlockMapTest::tearDown()
{
}

void
FreeBlockMapTest::testConstructor()
{
	cout << "FreeBlockMapTest::testConstructor()" << endl ;
	FreeBlockMap fbmap(1024, 400) ;

	try {
		FreeBlockMap toosmallstarting(1024,0) ;
		CPPUNIT_FAIL("Created map with too small of a starting block num") ;
	} catch (seerror &exception) {}

	try {
		FreeBlockMap negativestartingat(1024,-1) ;
		CPPUNIT_FAIL("Created map with a negative starting block num") ;
	} catch (seerror &exception) {}

	try {
		FreeBlockMap toofewbits(0,100) ;
		CPPUNIT_FAIL("Created map with 0 bits") ;
	} catch (seerror &exception) {}

	try {
		FreeBlockMap negativebits(-1,100) ;
		CPPUNIT_FAIL("Created map with negative bits") ;
	} catch (seerror &exception) {}

	CPPUNIT_FAIL("not implemented") ;
}

void
FreeBlockMapTest::testAllocateFreeMethods()
{
	cout << "FreeBlockMapTest::testAllocateFreeMethods()" << endl ;
	CPPUNIT_FAIL("not implemented") ;
}

void
FreeBlockMapTest::testOtherMethods()
{
	cout << "FreeBlockMapTest::testOtherMethods()" << endl ;
	CPPUNIT_FAIL("not implemented") ;
}
@


1.2
log
@
Added constructor unit tests.
@
text
@@


1.1
log
@
New BlockFile interface and corresponding unit tests. These build, not all
unit tests run. But this has not yet been integrated into the filesystem so
that still runs.
@
text
@d3 1
d24 22
@

