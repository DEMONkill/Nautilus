head	1.2;
access;
symbols;
locks; strict;
comment	@// @;


1.2
date	2005.04.22.19.19.57;	author gtarcea;	state dead;
branches;
next	1.1;
deltatype	text;
permissions	444;
commitid	a2c42694e511cab;
kopt	kv;
filename	@FreeBlockMapUnitTest.cpp@;

1.1
date	2005.04.20.19.06.02;	author gtarcea;	state Exp;
branches;
next	;
deltatype	text;
permissions	666;
commitid	6a84266a80775a9;
kopt	kv;
filename	@FreeBlockMapUnitTest.cpp@;


desc
@@


1.2
log
@Moved unit tests to utest directory.
@
text
@#include "FreeBlockMapUnitTest.hpp"
#include "FreeBlockMap.hpp"
#include "SynerEdge.hpp"
#include "seerror.hpp"
#include <iostream>
#include <fstream>
using namespace std ;
using namespace SynerEdge ;

CPPUNIT_TEST_SUITE_REGISTRATION(FreeBlockMapUnitTest) ;

void
FreeBlockMapUnitTest::setUp()
{
}

void
FreeBlockMapUnitTest::tearDown()
{
}

void
FreeBlockMapUnitTest::testConstructor()
{
	cout << "FreeBlockMapUnitTest::testConstructor()" << endl ;

	FreeBlockMap fbmap(1024, 400) ;

	try {
		FreeBlockMap toosmallstarting(1024,0) ;
		CPPUNIT_FAIL("Created map with too small of a starting block num") ;
	} catch (seerror &exception) {}

	try {
		FreeBlockMap negativestartingat(1024,-1) ;
		CPPUNIT_FAIL("Created map with a negative starting block num") ;
	} catch (seerror &exception) {}

	try {
		FreeBlockMap toofewbits(0,100) ;
		CPPUNIT_FAIL("Created map with 0 bits") ;
	} catch (seerror &exception) {}

	try {
		FreeBlockMap negativebits(-1,100) ;
		CPPUNIT_FAIL("Created map with negative bits") ;
	} catch (seerror &exception) {}

}

void
FreeBlockMapUnitTest::testAllocateFreeMethods()
{
	cout << "FreeBlockMapUnitTest::testAllocateFreeMethods()" << endl ;

	int64 blocknum ;
	FreeBlockMap t(100, 100) ;

	CPPUNIT_ASSERT(t.getFreeBlockCount() == 100) ;
	blocknum = t.allocateBlock() ;
	CPPUNIT_ASSERT(blocknum >= 100) ;
	CPPUNIT_ASSERT(t.getFreeBlockCount() == 99) ;
	CPPUNIT_ASSERT(t.freeBlock(blocknum) == true) ;
	CPPUNIT_ASSERT(t.getFreeBlockCount() == 100) ;
}

void
FreeBlockMapUnitTest::testOperators()
{
	FreeBlockMap t(200, 200) ;
	FreeBlockMap t2 ;
	fstream file ;

	file.open("/tmp/FreeBlockMapUnitTest.out", ios::out) ;
	file << t ;
	file.close() ;
	file.open("/tmp/FreeBlockMapUnitTest.out", ios::in) ;
	file >> t2 ;
	CPPUNIT_ASSERT(t2.getFreeBlockCount() == 200) ;
	CPPUNIT_FAIL("not implemented") ;
}
@


1.1
log
@More unit tests, plus move over to new naming convention.
@
text
@@

