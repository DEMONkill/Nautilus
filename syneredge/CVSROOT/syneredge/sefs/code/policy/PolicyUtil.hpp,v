head	1.2;
access;
symbols;
locks; strict;
comment	@// @;


1.2
date	2005.05.09.15.53.13;	author irrer;	state Exp;
branches;
next	1.1;
deltatype	text;
permissions	666;
commitid	8a8427f86af2c7b;
kopt	kv;
filename	@PolicyUtil.hpp@;

1.1
date	2005.05.09.12.57.12;	author irrer;	state Exp;
branches;
next	;
deltatype	text;
permissions	666;
commitid	908427f5e1527e5;
kopt	kv;
filename	@PolicyUtil.hpp@;


desc
@@


1.2
log
@Made utility to generate typedefs based on database tables and fields.

Updated files to use and test SEDB.h.

Changed varchar(5000) field to text (in make_db) because
mysql was converting it anyway.
@
text
@
#ifndef PolicyUtil_INCLUDED
#define PolicyUtil_INCLUDED

#include <stdio.h>
#include <string.h>
#include <assert.h>
#include <iostream>

typedef long int32;
typedef long long int64;

using namespace std;

// debug macros
#define TRC (printf("%s:%d\n", __FILE__, __LINE__))
#if false
#define IS_PRINTABLE(X) (((X)>=' ')&&((X) <='z'))
#define TRC0 cout << strrchr (__FILE__,'/')+1 << ":" << __LINE__ << " " <<
#define TRCasc(A,L) {int Ts=0;for (int Ti=0; Ti<(L);Ti++) { char Tb[5]; int Tv=((char*)(A))[Ti]&255; if ((Ti%20)==0) cout << "\n"; sprintf(Tb,(IS_PRINTABLE(Tv)?"  %c":" %02x"),Tv); cout << Tb; Ts+=Tv;} cout<< "   Sum:"<<Ts<<"\n";}
#define TRChex(A,L) {int Ts=0;for (int Ti=0; Ti<(L);Ti++) { char Tb[5]; int Tv=((char*)(A))[Ti]&255; if ((Ti%10)==0) cout << "\n"; sprintf(Tb," %02x",Tv); cout << Tb; Ts+=Tv;} cout<< "   Sum:"<<Ts<<"\n";}
#define TRC TRC0 "\n";
#define TRC1(P1) TRC0 #P1 << ":" << (P1) << "\n";

#define TRC2(P1,P2) TRC0 #P1 << ":" << (P1) << "   " << #P2 << ":" << (P2) << "\n";
#define TRC3(P1,P2,P3) TRC0 #P1 << ":" << (P1) << "   " << #P2 << ":" << (P2) << "   " << #P3 << ":" << (P3) << "\n";
#define TRCM(M) TRC0 (M) << "\n";
#define TRCB(B) TRC0 #B << ((B) ? " True" : " False") << "\n";
#define TRCHEX(A,L) TRC0 #A << ":" << #L <<"="<<(L) ; TRChex((A),(L))
#define TRCKEY(K) TRC0 "Key: " << (K); if ((K)!=NULL){TRChex ((K)->KeyData(),(K)->KeyLength())}
#endif

#endif
@


1.1
log
@Added files for policy manipulation.
@
text
@d10 1
@

