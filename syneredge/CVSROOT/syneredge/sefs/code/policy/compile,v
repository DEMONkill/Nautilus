head	1.5;
access;
symbols;
locks; strict;
comment	@# @;


1.5
date	2005.06.06.16.55.55;	author irrer;	state Exp;
branches;
next	1.4;
deltatype	text;
permissions	777;
commitid	f7042a480136a77;
kopt	kv;
filename	compile;

1.4
date	2005.06.06.16.53.21;	author irrer;	state Exp;
branches;
next	1.3;
deltatype	text;
permissions	777;
commitid	ad442a47f5c6821;
kopt	kv;
filename	compile;

1.3
date	2005.06.02.20.52.41;	author irrer;	state Exp;
branches;
next	1.2;
deltatype	text;
permissions	777;
commitid	ac4429f718c6715;
kopt	kv;
filename	compile;

1.2
date	2005.06.02.19.38.56;	author irrer;	state Exp;
branches;
next	1.1;
deltatype	text;
permissions	777;
commitid	97c429f60342e72;
kopt	kv;
filename	compile;

1.1
date	2005.05.09.12.57.13;	author irrer;	state Exp;
branches;
next	;
deltatype	text;
permissions	777;
commitid	908427f5e1527e5;
kopt	kv;
filename	compile;


desc
@@


1.5
log
@Added utility include file.
@
text
@
# This script compiles the policy code.  It has only been
# compiled on Linux and requires MySQL 5.x to be installed.
# The "BASE" environment variable may vary depending on where
# MySQL is installed.

echo
#BASE=/home/irrer/utilities/mysql/mysql-standard-5.0.2-alpha-pc-linux-i686
BASE=../tools/mysql

CFG=$BASE/bin/mysql_config

myname=`basename $0`

export cflags=`$CFG --cflags`" -g -I."

export libs=" -g "`$CFG --libs`

for f in *.c ; do
    file=`echo $f | sed "s/.c$//"`
    if [ ${file}.c -nt ${file}.o ] ; then
        echo Compiling $file.c ...
        # echo gcc -c $file.c -o $file.o $cflags
        gcc -c $file.c -o $file.o $cflags
        if [ $? != 0 ] ; then
            exit $?
        fi
    fi
done

for f in *.cpp ; do
    file=`echo $f | sed "s/.cpp$//"`
    if [ ${file}.cpp -nt ${file}.o ] ; then
        echo Compiling $file.cpp ...
        # echo g++ -c $file.cpp -o $file.o $cflags
        g++ -c $file.cpp -o $file.o $cflags
        if [ $? != 0 ] ; then
            exit $?
        fi
    fi
done

objs=`ls *.o | grep -v syg_`

for f in syg_*.cpp ; do
    file=`echo $f | sed "s/.cpp$//"`
    echo Linking $file ...
    g++ -o $file $file.o $objs $libs
    if [ $? != 0 ] ; then
        exit $?
    fi
done

@


1.4
log
@Added transaction handling.
Added better error checking for parameters.
Improved error messages.
@
text
@a18 6
echo $cflags

echo $libs

exit 0

@


1.3
log
@Renamed to avoid naming collisions.
@
text
@d19 6
d29 1
d41 1
@


1.2
log
@Rework of policy engine.
@
text
@a18 4
export objs="DBinterface.o SEmysql.o BlockFile.o VirtualDiskPolicy.o"
export objs="DBinterface.o SEmysql.o BlockFile.o VirtualDisk.o"
export objs="DBinterface.o SEmysql.o BlockFile.o FileSystem.o"

d41 1
a41 1
objs=`ls *.o | grep -v Main`
d43 1
a43 1
for f in *Main.cpp ; do
@


1.1
log
@Added files for policy manipulation.
@
text
@d8 2
a9 1
BASE=/home/irrer/utilities/mysql/mysql-standard-5.0.2-alpha-pc-linux-i686
d15 1
a15 1
export cflags=`$CFG --cflags`" -I."
d17 1
a17 1
export libs=`$CFG --libs`
d19 12
a30 7
export objs="DBinterface.o SEmysql.o"

for f in SEmysql ; do
    echo Compiling $f.c ...
    gcc -c $f.c -o $f.o $cflags
    if [ $? != 0 ] ; then
        exit $?
d34 8
a41 5
for f in PrintSEDiskFile ConstructSEDisk ConstructVirtualDisk DBinterface ; do
    echo Compiling $f.cpp ...
    g++ -c $f.cpp -o $f.o $cflags
    if [ $? != 0 ] ; then
        exit $?
d45 1
d47 4
a50 3
for f in PrintSEDiskFile ConstructSEDisk ConstructVirtualDisk ; do
    echo Linking $f ...
    g++ -o $f $f.o $objs $libs
@

